<launch>
  <arg name="map_file" value="$(find lattice_planner)/maps/test_map.yaml" />
  <param name="use_sim_time" value="true" />
  <param name="clock_node/time_modifier" type="double" value="3" />
  <param name="clock_node/clocks_per_second" type="double" value="10" />
  <param name="simulator_node/show_dt" type="bool" value="False" />
  <param name="mission_file" type="string" value="$(find mission_publisher)/yaml/3_robot.yaml" />
  <param name="parameters_file" type="string" value="$(find robot_model)/learning_data/robot_001.yaml" />
  <param name="map_zones_file" type="string" value="$(find lattice_planner)/maps/test_map_segmented.yaml" />
  <rosparam param="robot_list"> ['mirko', 'slavko', 'maxo'] </rosparam>
    
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find simulator)/rviz/3_robota.rviz"/>
  
  <node pkg="map_server" type="map_server" name="map_server" args="$(arg map_file)" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="link_broadcaster_map" args="0 0 0 0 0 0 1 world map" />
    
  <include file="$(find robot_model)/launch/simple.launch">
    <arg name="robot_name" value="mirko" />
    <arg name="init_pose" value="'{position: {x: 0.5, y: 3.0, z: 0.0}, orientation: {x: 0.0,y: 0.0,z: 0.0,w: 1.0}}'" />
    <arg name="output" value="screen" />
  </include>
  
  <include file="$(find robot_model)/launch/simple.launch">
    <arg name="robot_name" value="slavko" />
    <arg name="init_pose" value="'{position: {x: 9.5, y: 3.0, z: 0.0}, orientation: {x: 0.0,y: 0.0,z: 1.0,w: 0.0}}'" />
    <arg name="output" value="screen" />
  </include>
  
  <include file="$(find robot_model)/launch/simple.launch">
    <arg name="robot_name" value="maxo" />
    <arg name="init_pose" value="'{position: {x: 0.5, y: 8.0, z: 0.0}, orientation: {x: 0.0,y: 0.0,z: 0.0,w: 1.0}}'" />
    <arg name="output" value="screen" />
  </include>

  <node name="simulator_node" pkg="simulator" type="simulator_ideal.py" output="screen" />
  <node name="clock_node" pkg="simulator" type="clock_node.py" output="screen" />
  
  <node name="mission_publisher_node" pkg="mission_publisher" type="mission_publisher.py" />
  
</launch>
